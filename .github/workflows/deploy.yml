name: Build and Deploy

on:
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
  test:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Install Dependencies
      run: |
        cd backend
        npm install
        cd ../frontend
        npm install
        cd ..

    - name: Run Tests
      run: |
        cd backend
        npm run test:cov
        # npm run lint || true
        cd ../frontend
        npm run test:cov
        # npm run lint || true
        cd ..
        pwd
        mkdir -p ./coverage
        cp -r reports/backend/coverage/lcov.info coverage/lcov.info
    
    - name: SonarQube Scan
      uses: sonarsource/sonarcloud-github-action@v4
      env:
        SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN  }}
        GITHUB_TOKEN: ${{ secrets.GHUB_TOKEN }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Upload Test Reports to S3
      run: |
        aws s3 sync coverage s3://${{ secrets.AWS_S3_BUCKET }}/bidding-platform/${{ github.run_number }}/test-reports --delete


  build-and-deploy:
    needs: test
    if: success()
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Build Frontend
      working-directory: frontend
      run: |
        npm install
        npm run build --prod
      # outputs:
      #   frontend-dist: ${{ steps.build-frontend.outputs.frontend-dist }}

    - name: Build Backend
      working-directory: backend
      run: |
        npm install
        npm run build
      # outputs:
      #   backend-dist: ${{ steps.build-backend.outputs.backend-dist }}

    - name: Create Release Package
      run: |
        mkdir -p build
        cd backend
        tar -czvf ../build/backend.tar.gz dist
        cd ../frontend
        tar -czvf ../build/frontend.tar.gz dist
        cd ..

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          build/backend.tar.gz
          build/frontend.tar.gz
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        body: |
          Automated release from PR #${{ github.event.pull_request.number }}
          ${{ github.event.pull_request.title }}
      env:
        GITHUB_TOKEN: ${{ secrets.GHUB_TOKEN }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Upload to S3
      run: |
        aws s3 sync build s3://${{ secrets.AWS_S3_BUCKET }}/bidding-platform/build-packages --delete

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: success()

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to DigitalOcean
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.DROPLET_IP }}
        username: ${{ secrets.DROPLET_USER }}
        key: ${{ secrets.DROPLET_KEY }}
        script: |
          cd /var/www/bidding-platform
          git pull origin master || git clone https://github.com/dreaife/bidding-platform.git .
          
          cd frontend
          npm install
          npm run build --prod
          
          cd ../backend
          npm install
          npm run build
          
          mkdir -p public
          cp -r ../frontend/dist/frontend/browser/* public/
          
          pm2 restart all || pm2 start dist/main.js --name bidding-platform-backend
